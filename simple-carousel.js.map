{"version":3,"file":"simple-carousel.js","sourceRoot":"","sources":["src/simple-carousel.ts"],"names":[],"mappings":"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","sourcesContent":["import {LitElement, html, css} from 'lit';\nimport {\n  customElement,\n  property,\n  queryAssignedElements,\n  state,\n} from 'lit/decorators.js';\nimport {\n  AnimationTuple,\n  ICON_LEFT,\n  ICON_RIGHT,\n  SLIDE_LEFT_IN,\n  SLIDE_LEFT_OUT,\n  SLIDE_RIGHT_IN,\n  SLIDE_RIGHT_OUT,\n} from './constants.js';\nimport {styleMap} from 'lit-html/directives/style-map.js';\nimport './slide-button.js';\n\n@customElement('simple-carousel')\nexport class SimpleCarousel extends LitElement {\n  static override styles = css`\n    ::slotted(.slide-hidden) {\n      display: none;\n    }\n    ::slotted(*) {\n      position: absolute;\n      padding: 1em;\n    }\n    :host {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n    }\n    #container {\n      border-radius: 24px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      flex: 1;\n      margin: 0 18px;\n      padding: 1em;\n      overflow: hidden;\n      position: relative;\n      box-shadow: var(--shadow, gray) 0.3em 0.3em 0.4em,\n        var(--hightlight, white) -0.1em -0.1em 0.3em;\n    }\n  `;\n\n  @state() private containerHeight = 0;\n\n  @property({type: Number}) slideIndex = 0;\n\n  @queryAssignedElements()\n  private readonly slideElements!: HTMLElement[];\n\n  override firstUpdated() {\n    this.containerHeight = getMaxHeight(this.slideElements);\n    this.initializeSlide();\n  }\n\n  // override updated() {\n  //   this.navigateSlide();\n  // }\n\n  private initializeSlide() {\n    for (let i = 0; i < this.slideElements.length; i++) {\n      if (i === this.slideIndex) {\n        showSlide(this.slideElements[i]);\n      } else {\n        hideSlide(this.slideElements[i]);\n      }\n    }\n  }\n\n  private changeSlide(offset: number) {\n    const slideCount = this.slideElements.length;\n    this.slideIndex =\n      (slideCount + ((this.slideIndex + offset) % slideCount)) % slideCount;\n  }\n\n  navigateToNextSlide = () =>\n    this.navigateWithAnimation(1, SLIDE_LEFT_OUT, SLIDE_RIGHT_IN);\n\n  navigateToPreSlide = () =>\n    this.navigateWithAnimation(-1, SLIDE_RIGHT_OUT, SLIDE_LEFT_IN);\n\n  private async navigateWithAnimation(\n    nextSlideOffset: number,\n    leavingAnimation: AnimationTuple,\n    enteringAnimation: AnimationTuple\n  ) {\n    const elLeaving = this.slideElements[this.slideIndex];\n    const leavingAnim = elLeaving.animate(\n      leavingAnimation[0],\n      leavingAnimation[1]\n    );\n    this.changeSlide(nextSlideOffset);\n\n    const newSlideEl = this.slideElements[this.slideIndex];\n    showSlide(newSlideEl);\n    const enteringAnim = newSlideEl.animate(\n      enteringAnimation[0],\n      enteringAnimation[1]\n    );\n\n    await Promise.all([leavingAnim.finished, enteringAnim.finished]);\n    hideSlide(elLeaving);\n  }\n\n  override render() {\n    const containerStyles = {\n      height: `${this.containerHeight}px`,\n    };\n    return html`\n      <slide-button @click=\"${this.navigateToPreSlide}\">\n        ${ICON_LEFT}\n      </slide-button>\n      <div id=\"container\" style=\"${styleMap(containerStyles)}\">\n        <slot></slot>\n      </div>\n      <slide-button @click=\"${this.navigateToNextSlide}\">\n        ${ICON_RIGHT}</slide-button\n      >\n    `;\n  }\n}\n\nfunction hideSlide(el: HTMLElement) {\n  el.classList.add('slide-hidden');\n}\n\nfunction showSlide(el: HTMLElement) {\n  el.classList.remove('slide-hidden');\n}\n\nfunction getMaxHeight(els: HTMLElement[]): number {\n  return Math.max(0, ...els.map((el) => el.getBoundingClientRect().height));\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'simple-carousel': SimpleCarousel;\n  }\n}\n"]}